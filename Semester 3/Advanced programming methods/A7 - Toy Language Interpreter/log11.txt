State #2
Execution stack: 
int v;Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #2
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #3
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #3
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #3
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
int v;Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
int v;Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
int v;Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
int v;Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
int v
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a;v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Ref(int) a
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10;New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
v = 10
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 0

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22);Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
New(a, 22)
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (0, int)
v -> 10

Output list: 

Files table: 

Heap memory: 

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)));print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
Fork(WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a)))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #2
Execution stack: 
WriteHeap(a, 30);v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 22

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
v = 32;print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v);print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(ReadHeap(a))
print(v);print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 
print(v)
print(ReadHeap(a))

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30

Files table: 

Heap memory: 
1 -> 30

State #1
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 10

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

State #2
Execution stack: 

Symbol table: 
a -> (1, int)
v -> 32

Output list: 
32
30
10
30

Files table: 

Heap memory: 
1 -> 30

